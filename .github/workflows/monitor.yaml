name: $ARIO Network Status

on:
  workflow_dispatch:
  schedule:
    - cron: '15 * * * *' # Run every hour at the 15th minute (accounts for distributions happening at the 0th minute)

jobs:
  monitor:
    permissions:
      contents: read
      actions: read
    strategy:
      matrix:
        network: [testnet, mainnet]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      NETWORK_MAP: |
        {
          "devnet": "GaQrvEMKBpkjofgnBi_B3IgIDmY_XYelVLB6GcRGrHc",
          "testnet": "agYcCFJtrMG6cqMuZfskIkFTGvUPddICmtQSBIoPdiA",
          "mainnet": "qNvAoz0TgcH7DMg8BCVn8jF32QH5L6T29VjHxhHqqGE"
        }
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Setup
        run: yarn

      - name: Run Monitor Tests
        run: |
          mkdir -p logs
          for i in {1..4}; do
            echo "Attempt $i of 4"
            yarn monitor:${{ matrix.network }} 2>&1 | tee logs/${{ matrix.network }}-${{ github.run_id }}-attempt-$i.log
            exit_code=${PIPESTATUS[0]}
            if [ $exit_code -eq 0 ]; then
              echo "Monitor tests passed on attempt $i"
              exit 0
            else
              echo "Attempt $i failed with exit code $exit_code"
              if [ $i -lt 4 ]; then
                echo "Retrying in 15 seconds..."
                sleep 15
              fi
            fi
          done
          echo "All 4 attempts failed"
          exit 1
        id: monitor
        shell: bash
      - name: Notify Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2.3.2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: $ARIO (${{ matrix.network }}) Process Observation Failed!
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CUSTOM_PAYLOAD: |
            {
              "attachments": [
                {
                  "fallback": "IO Process Observation Failed",
                  "color": "danger",
                  "title": "Details",
                  "text": "The $ARIO (${{ matrix.network }}) Process has failed at least one observation test!",
                  "fields": [
                    {
                      "title": "Network",
                      "value": "${{ matrix.network }}",
                      "short": true
                    },
                    {
                      "title": "Process ID",
                      "value": "${{ fromJson(env.NETWORK_MAP)[matrix.network] }}",
                      "short": true
                    },
                    {
                      "title": "GitHub Action",
                      "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                      "short": false
                    },
                    {
                      "title": "Rerun",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/jobs/${{ github.job }}/rerun|Click here to Rerun>",
                      "short": false
                    }
                  ]
                }
              ]
            }

      # on success send a slack message
      - name: Notify Success
        if: success() && vars.NOTIFY_SUCCESS == 'true'
        uses: rtCamp/action-slack-notify@v2.3.2
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: $ARIO (${{ matrix.network }}) Process Observation Success!
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CUSTOM_PAYLOAD: |
            {
              "attachments": [{
                "fallback": "IO Process Observation Success!",
                "color": "good",
                "title": "Test Results",
                "text": 'The $ARIO (${{ matrix.network }}) Process has passed all observation tests!',
                "fields": [{
                  "title": "Network",
                  "value": "${{ matrix.network }}",
                  "short": true
                },
                {
                  "title": "Process ID",
                  "value": "${{ fromJson(env.NETWORK_MAP)[matrix.network] }}",
                  "short": true
                },
                {
                  "title": "GitHub Action",
                  "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "short": false
                }
                ]
              }]
            }
