local constants = require("constants")

describe("constants", function()
	describe("unit conversions", function()
		it("should convert mARIO to ARIO correctly", function()
			assert.are.equal(1000000, constants.ARIOToMARIO(1))
			assert.are.equal(1000000000000, constants.ARIOToMARIO(10 ^ 6)) -- max token supply (1 billion ARIO)
		end)

		it("should convert seconds to milliseconds correctly", function()
			assert.are.equal(1000, constants.secondsToMs(1))
			assert.are.equal(60000, constants.secondsToMs(60))
			assert.are.equal(0, constants.secondsToMs(0))
		end)

		it("should convert minutes to milliseconds correctly", function()
			assert.are.equal(60000, constants.minutesToMs(1))
			assert.are.equal(3600000, constants.minutesToMs(60))
			assert.are.equal(0, constants.minutesToMs(0))
		end)

		it("should convert milliseconds to seconds correctly", function()
			assert.are.equal(86400000, constants.daysToMs(1))
			assert.are.equal(8640000000, constants.daysToMs(100))
			assert.are.equal(0, constants.daysToMs(0))
		end)

		it("should convert hours to milliseconds correctly", function()
			assert.are.equal(3600000, constants.hoursToMs(1))
			assert.are.equal(86400000, constants.hoursToMs(24))
			assert.are.equal(0, constants.hoursToMs(0))
		end)

		it("should convert years to milliseconds correctly", function()
			assert.are.equal(31536000000, constants.yearsToMs(1))
			assert.are.equal(315360000000, constants.yearsToMs(10))
			assert.are.equal(0, constants.yearsToMs(0))
		end)
	end)
end)
